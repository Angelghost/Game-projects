package org.borsoi.game.lib.business.utils;

import org.borsoi.game.lib.object.enumeric.Carateritics;
import org.borsoi.game.lib.object.object.Humanoide;

public final class FightUtility {

	/**
	 * make a round on a fight return 1 if humanoid2 died
	 */
	public static int makeAFight(Humanoide pHumanoide1, Humanoide pHumanoide2) {

		long str1 = pHumanoide1.getCarateritics().get(Carateritics.Strength);

		int dmCon = 10;
		// Step 1 ------------------------------------- [{(Stat^3 ÷ 32) + 32} x
		// DmCon ÷16]
		// Step 2 ---------------------------------------- [{(127^3 ÷ 32) + 32}
		// x 16 ÷ 16]
		// Step 3 -------------------------------------- [{(2048383 ÷ 32) + 32}
		// x 16 ÷ 16]
		// Step 4 --------------------------------------------------- [{(64011)
		// + 32} x 1]
		// Step 5 --------------------------------------------------------
		// [{(64043 x 1)}]
		// Step 6 ---------------------------------------------------- Base
		// Damage = 64043
		double baseDmg = ((Math.pow(str1, 3) / 32) + 32) * dmCon / 16;

		double def2 = pHumanoide1.getCarateritics().get(Carateritics.Defend);

		// Step 7 ----------------------------------------- [{(Def - 280.4)^2} ÷
		// 110] + 16
		// Step 8 ------------------------------------------ [{(34 - 280.4)^2} ÷
		// 110] + 16
		// Step 9 ------------------------------------------------- [(-246)^2) ÷
		// 110] + 16
		// Step 10 ---------------------------------------------------- [60516 ÷
		// 110] + 16
		// Step 11 ------------------------------------------------------------
		// [550] + 16
		// Step 12 ----------------------------------------------------------
		// DefNum = 566

		double defNum = ((Math.pow(def2 - 280.4, 2)) / 110) + 16;

		// Step 13 ---------------------------------------------- [BaseDmg *
		// DefNum ÷ 730]
		// Step 14 --------------------------------------------------- [64043 *
		// 566 ÷ 730]
		// Step 15 ------------------------------------------------------
		// [36248338 ÷ 730]
		// Step 16 ------------------------------------------------- Base Damage
		// 2 = 49655
		double baseDmg2 = baseDmg * defNum / 730;

		// Step 17 ------------ Base Damage 2 * {730 - (Def * 51 - Def^2 ÷ 11) ÷
		// 10} ÷ 730
		// Step 18 ---------------------- 49655 * {730 - (34 * 51 - 34^2 ÷ 11) ÷
		// 10} ÷ 730
		// Step 19 ------------------------- 49655 * {730 - (1734 - 1156 ÷ 11) ÷
		// 10} ÷ 730
		// Step 20 ------------------------------- 49655 * {730 - (1734 - 105) ÷
		// 10} ÷ 730
		// Step 21 ------------------------------------- 49655 * {730 - (1629) ÷
		// 10} ÷ 730
		// Step 22 --------------------------------------------- 49655 * {730 -
		// 162} ÷ 730
		// Step 23 ----------------------------------------------------- 49655 *
		// 568 ÷ 730
		// Step 24 -------------------------------------------------- Final
		// Damage = 38635

		double finalDmg = baseDmg2
				* (730 - (defNum * 51 - Math.pow(defNum, 2) / 11)) / 10 / 730;

		double result = pHumanoide2.getMaxLife() - finalDmg;

		if (result < 0) {
			return 1;
		}

		return 0;
	}
}
